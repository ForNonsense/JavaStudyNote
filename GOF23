GOF23学习笔记

1.单例模式
  实现方式：
    a)饿汉模式
    b)懒汉模式
    c)双重锁检测模式
    d)静态内部类模式
    e)枚举模式
  a,e为加载即生成，不可延时，占用资源高，调用效率高
  c为线程安全，可延时加载，占用资源少，调用效率低
  b,d为延时加载，占用资源少，调用效率低
  枚举模式优于饿汉模式
  静态内部类模式优于懒汉模式
  
2.工厂模式
  a)简单工厂  -- 违背OCP原则，添加类则要修改工厂代码
  b)工厂方法  -- 符合OCP原则，理论上建议使用，但是要声明很多类，实际使用简单工厂模式 (父类-子类-子类建造工厂 客户端-子类工厂)
  c)抽象工厂  -- 抽象出工厂接口，根据实际子类继承接口，抽象出产品接口，根据实际子类继承接口。然后工厂子类调用产品子类

3.建造者模式
  用于多个部件类的复杂组合顺序。总产品类，产品部件建造接口，继承接口的部件Builder，组合部件的Director
  客户端只与Director进行交互
  
4.原型模式
  浅复制与深复制  object.clone()
  用于快速创建结构相同的对象，可修改对象属性

5.适配器模式
  adapter用于adaptee与client之间的适配
  
6.代理模式
  
  
7.桥接模式
  一个类内部有另一个类的私有属性，通过该属性联结两个类的关系

8.组合模式
  leaf与composite实现component的相同方法，使二者具体相同的处理方式
  
9.装饰模式
  decorator 动态为对象增加新功能
  装饰模式和桥接模式的区别：桥接模式是对象自身现有机制沿着多个维度变化，是既有部分不稳定。
  装饰模式是为了增加新的功能。
  
  
  
